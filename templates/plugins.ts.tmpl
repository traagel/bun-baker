import { FastifyInstance } from 'fastify';
import { config } from '@/config';

export async function registerPlugins(app: FastifyInstance) {
  // Register Swagger for API documentation
  await app.register(import('@fastify/swagger'), {
    openapi: {
      info: {
        title: '{{ service_name }} Service',
        description: 'Microservice API Documentation',
        version: '1.0.0'
      },
      servers: [{
        url: `http://localhost:${config.port}`,
        description: 'Development server'
      }],
      components: {
        securitySchemes: {
          bearerAuth: {
            type: 'http',
            scheme: 'bearer',
            bearerFormat: 'JWT'
          }
        }
      }
    },
    hideUntagged: true
  });

  // Register Swagger UI for visual documentation
  await app.register(import('@fastify/swagger-ui'), {
    routePrefix: '/docs',
    uiConfig: {
      docExpansion: 'list',
      deepLinking: false
    }
  });

  // Register CORS for cross-origin requests
  await app.register(import('@fastify/cors'), {
    // Configure as needed:
    // origin: ['https://example.com'],
    // methods: ['GET', 'POST', 'PUT', 'DELETE'],
    // credentials: true
  });
  
  // Add rate limiting to prevent abuse
  await app.register(import('@fastify/rate-limit'), {
    max: 100, // Maximum 100 requests
    timeWindow: '1 minute' // Per minute
  });
} 