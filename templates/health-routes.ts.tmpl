import { FastifyInstance } from 'fastify';
import { db } from '@/config';

export async function healthRoutes(app: FastifyInstance) {
  app.get('/live', {
    schema: {
      tags: ['Health'],
      description: 'Liveness probe',
      response: {
        200: {
          type: 'object',
          properties: {
            status: { type: 'string' }
          }
        }
      }
    }
  }, async () => ({ status: 'OK' }));

  app.get('/ready', {
    schema: {
      tags: ['Health'],
      description: 'Readiness probe',
      response: {
        200: {
          type: 'object',
          properties: {
            status: { type: 'string' },
            db: { type: 'string' },
            timestamp: { type: 'string' }
          }
        },
        503: {
          type: 'object',
          properties: {
            status: { type: 'string' },
            error: { type: 'string' }
          }
        }
      }
    }
  }, async (request, reply) => {
    try {
      // Test database connection
      await db.query('SELECT 1');
      
      return {
        status: 'OK',
        db: 'Connected',
        timestamp: new Date().toISOString()
      };
    } catch (err) {
      request.log.error('Health check failed:', err);
      
      reply.code(503);
      return {
        status: 'ERROR',
        error: 'Database connection failed'
      };
    }
  });
} 